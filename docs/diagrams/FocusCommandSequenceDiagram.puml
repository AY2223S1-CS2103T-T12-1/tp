@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":TaAssistParser" as TaAssistParser LOGIC_COLOR
participant ":FocusCommandParser" as FocusCommandParser LOGIC_COLOR
participant "c:FocusCommand" as FocusCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
participant "m:ModuleClass" as ModuleClass MODEL_COLOR
end box

[-> LogicManager : execute("focus c/CS1101S")
activate LogicManager

LogicManager -> TaAssistParser : parseCommand("focus c/CS1101S")
activate TaAssistParser

create FocusCommandParser
TaAssistParser -> FocusCommandParser
activate FocusCommandParser

FocusCommandParser --> TaAssistParser
deactivate FocusCommandParser

TaAssistParser -> FocusCommandParser: parse("CS1101S")
activate FocusCommandParser


create ModuleClass
FocusCommandParser -> ModuleClass
activate ModuleClass

ModuleClass --> FocusCommandParser: m
deactivate ModuleClass


create FocusCommand
FocusCommandParser -> FocusCommand: m
activate FocusCommand

FocusCommand --> FocusCommandParser: c
deactivate FocusCommand

FocusCommandParser --> TaAssistParser: c
deactivate FocusCommandParser
FocusCommandParser -[hidden]-> TaAssistParser
destroy FocusCommandParser

TaAssistParser --> LogicManager: c
deactivate TaAssistParser

LogicManager -> FocusCommand: execute()
activate FocusCommand

opt module class exists
    FocusCommand -> Model: enterFocusMode(m)
    activate Model
    Model --> FocusCommand
    deactivate Model
end

create CommandResult
FocusCommand -> CommandResult
activate CommandResult

CommandResult --> FocusCommand
deactivate CommandResult

FocusCommand --> LogicManager: result
deactivate FocusCommand

LogicManager -->[
deactivate LogicManager

@enduml
