@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":TaAssistParser" as TaAssistParser LOGIC_COLOR
participant ":AssignCommandParser" as AssignCommandParser LOGIC_COLOR
participant "c:AssignCommand" as AssignCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
participant "s:Student" as Student MODEL_COLOR
end box

[-> LogicManager : execute("assign 1 3 c/CS1101S")
activate LogicManager

LogicManager -> TaAssistParser : parseCommand("assign 1 3 c/CS1101S")
activate TaAssistParser

create AssignCommandParser
TaAssistParser -> AssignCommandParser
activate AssignCommandParser

AssignCommandParser --> TaAssistParser
deactivate AssignCommandParser

TaAssistParser -> AssignCommandParser: parse("1 3 c/CS1101S"")
activate AssignCommandParser

create AssignCommand
AssignCommandParser -> AssignCommand
activate AssignCommand

AssignCommand --> AssignCommandParser: c
deactivate AssignCommand

AssignCommandParser --> TaAssistParser: c
deactivate AssignCommandParser
AssignCommandParser -[hidden]-> TaAssistParser
destroy AssignCommandParser

TaAssistParser --> LogicManager: c
deactivate TaAssistParser

LogicManager -> AssignCommand: execute()
activate AssignCommand

AssignCommand -> Model: getFilteredStudentList()
activate Model
Model --> AssignCommand: List<Students>
deactivate Model

loop for each student to assign
    create Student
    AssignCommand -> Student
    activate Student
    Student --> AssignCommand: s
    deactivate Student
    AssignCommand -> Model: setStudent(student, s)
    activate Model
    deactivate Model
end

create CommandResult
AssignCommand -> CommandResult
activate CommandResult

CommandResult --> AssignCommand
deactivate CommandResult

AssignCommand --> LogicManager: result
deactivate AssignCommand

LogicManager -->[
deactivate LogicManager

@enduml
